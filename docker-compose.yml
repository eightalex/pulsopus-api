version: '3.7'
services:
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
      - db:/var/lib/postgresql/data
      - postgres:/data/postgres
    networks:
      - postgres
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/data/postgres

  api:
    build: ./
    container_name: api
    command: [ "yarn", "run", "start" ]
    restart: always
    ports:
      - '8080:8080'
    env_file:
      - ./.env
    networks:
      - api

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
#    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - api

volumes:
  postgres:
  db:
    driver: local

networks:
  postgres:
    driver: bridge
  api:
    name: api_network
    driver: bridge
